
import { useParams } from 'react-router-dom';
import Layout from '@/components/layout/Layout';
import { Button } from '@/components/ui/button';
import { 
  Tabs, 
  TabsContent, 
  TabsList, 
  TabsTrigger 
} from '@/components/ui/tabs';
import { 
  Card,
  CardContent,
  CardHeader,
  CardTitle
} from '@/components/ui/card';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Tag } from '@/components/ui/tag';
import { Badge } from '@/components/ui/badge';
import { 
  ExternalLink, 
  ThumbsUp, 
  ThumbsDown, 
  Star, 
  Globe, 
  DollarSign,
  Calendar,
  Share2,
  Flag,
  MessageSquare,
  Check,
  Clock,
  Users,
  Download,
  Smartphone,
  Monitor,
  Tablet,
  Zap,
  Shield,
  HeadphonesIcon,
  BookOpen,
  TrendingUp,
  Award,
  Copy,
  Twitter,
  Facebook,
  Linkedin
} from 'lucide-react';
import { tools, blogPosts } from '@/data/mockData';
import ToolCard, { ColorVariant } from '@/components/card/ToolCard';

// Mock detailed tool data
const getToolDetails = (toolId: string) => ({
  screenshots: [
    'https://images.unsplash.com/photo-1551650975-87deedd944c3?w=800&h=600&fit=crop',
    'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=600&fit=crop',
    'https://images.unsplash.com/photo-1504868584819-f8e8b4b6d7e3?w=800&h=600&fit=crop',
  ],
  keyFeatures: [
    {
      title: 'Êô∫ËÉΩÊñáÊú¨ÁîüÊàê',
      description: 'Âü∫‰∫éGPTÊäÄÊúØÁöÑÈ´òË¥®ÈáèÂÜÖÂÆπÂàõ‰ΩúÔºåÊîØÊåÅÂ§öÁßçÊñá‰ΩìÂíåËØ≠Ë®ÄÈ£éÊ†º',
      icon: 'ü§ñ'
    },
    {
      title: 'ÂÆûÊó∂Âçè‰Ωú',
      description: 'Â§ö‰∫∫ÂêåÊó∂ÁºñËæëÔºåÂÆûÊó∂ÂêåÊ≠•ÔºåÊèêÂçáÂõ¢ÈòüÂçè‰ΩúÊïàÁéá',
      icon: 'üë•'
    },
    {
      title: 'Ê®°ÊùøÂ∫ì',
      description: 'ÂÜÖÁΩÆ100+‰∏ì‰∏öÊ®°ÊùøÔºåË¶ÜÁõñÂïÜÂä°„ÄÅÂàõÊÑè„ÄÅÂ≠¶ÊúØÁ≠âÂ§ö‰∏™È¢ÜÂüü',
      icon: 'üìù'
    },
    {
      title: 'APIÈõÜÊàê',
      description: 'ÂºÄÊîæAPIÊé•Âè£ÔºåËΩªÊùæÈõÜÊàêÂà∞‰Ω†ÁöÑÂ∑•‰ΩúÊµÅÁ®ã‰∏≠',
      icon: 'üîó'
    }
  ],
  technicalSpecs: {
    platforms: ['Web', 'iOS', 'Android', 'Chrome Extension'],
    languages: ['‰∏≠Êñá', 'English', 'Êó•Êú¨Ë™û', 'Espa√±ol', 'Fran√ßais'],
    integrations: ['Slack', 'Discord', 'Notion', 'Google Docs', 'Microsoft Teams'],
    apiAvailable: true,
    offlineMode: false,
    dataEncryption: true
  },
  useCases: [
    {
      title: 'ÂÜÖÂÆπËê•ÈîÄ',
      description: 'Âø´ÈÄüÁîüÊàêÈ´òË¥®ÈáèÁöÑËê•ÈîÄÊñáÊ°à„ÄÅÂçöÂÆ¢ÊñáÁ´†ÂíåÁ§æ‰∫§Â™í‰ΩìÂÜÖÂÆπ',
      industries: ['Ëê•ÈîÄ', 'ÁîµÂïÜ', 'Â™í‰Ωì']
    },
    {
      title: 'Â≠¶ÊúØÂÜô‰Ωú',
      description: 'ËæÖÂä©Á†îÁ©∂ËÆ∫Êñá„ÄÅÊä•ÂëäÂíåÂ≠¶ÊúØÊñáÊ°£ÁöÑÊí∞ÂÜôÂíåÁºñËæë',
      industries: ['ÊïôËÇ≤', 'ÁßëÁ†î', 'Âá∫Áâà']
    },
    {
      title: 'ÂïÜÂä°Ê≤üÈÄö',
      description: 'ÁîüÊàê‰∏ì‰∏öÁöÑÈÇÆ‰ª∂„ÄÅÊèêÊ°àÂíåÂïÜ‰∏öÊñáÊ°£',
      industries: ['Âí®ËØ¢', 'ÈáëËûç', '‰ºÅ‰∏öÊúçÂä°']
    }
  ],
  changelog: [
    {
      version: '2.1.0',
      date: '2025-05-15',
      changes: ['Êñ∞Â¢ûÂ§öËØ≠Ë®ÄÊîØÊåÅ', '‰ºòÂåñAIÂìçÂ∫îÈÄüÂ∫¶', '‰øÆÂ§çÂ∑≤Áü•ÈóÆÈ¢ò']
    },
    {
      version: '2.0.5',
      date: '2025-05-01',
      changes: ['Â¢ûÂä†Âõ¢ÈòüÂçè‰ΩúÂäüËÉΩ', 'Êñ∞Â¢ûAPIÊñáÊ°£', 'ÁïåÈù¢‰ºòÂåñ']
    },
    {
      version: '2.0.0',
      date: '2025-04-15',
      changes: ['ÂÖ®Êñ∞ÁïåÈù¢ËÆæËÆ°', 'ÊÄßËÉΩÂ§ßÂπÖÊèêÂçá', 'Êñ∞Â¢ûÁßªÂä®Á´ØÊîØÊåÅ']
    }
  ]
});

// Mock reviews data
const reviews = [
  {
    id: 'review1',
    user: {
      name: 'ÊùéÊòéÂçé',
      avatar: '',
      role: '‰∫ßÂìÅÁªèÁêÜ',
      company: 'ÁßëÊäÄÂÖ¨Âè∏'
    },
    rating: 5,
    date: '2025-05-10',
    title: 'ÊûÅÂ§ßÊèêÂçá‰∫ÜÂ∑•‰ΩúÊïàÁéá',
    content: 'Ëøô‰∏™Â∑•ÂÖ∑ÂÆåÂÖ®ÊîπÂèò‰∫ÜÊàëÁöÑÂÜÖÂÆπÂàõ‰ΩúÊµÅÁ®ã„ÄÇAIÁîüÊàêÁöÑÂÜÖÂÆπË¥®ÈáèÂæàÈ´òÔºåËÄå‰∏îÁïåÈù¢Áõ¥ËßÇÊòìÁî®„ÄÇÁâπÂà´ÊòØÂõ¢ÈòüÂçè‰ΩúÂäüËÉΩÔºåËÆ©Êàë‰ª¨ÁöÑÂ∑•‰ΩúÊïàÁéáÊèêÂçá‰∫Ü300%„ÄÇÂÆ¢ÊúçÂìçÂ∫î‰πüÂæàÂèäÊó∂ÔºåÊÄª‰Ωì‰ΩìÈ™åÈùûÂ∏∏Ê£íÔºÅ',
    helpful: 24,
    notHelpful: 2,
    verified: true
  },
  {
    id: 'review2',
    user: {
      name: 'Sarah Johnson',
      avatar: '',
      role: 'ÂÜÖÂÆπÂàõ‰ΩúËÄÖ',
      company: 'Ëá™Áî±ËÅå‰∏ö'
    },
    rating: 4,
    date: '2025-05-08',
    title: 'ÂäüËÉΩ‰∏∞ÂØåÔºåÂÄºÂæóÊé®Ëçê',
    content: '‰Ωú‰∏∫‰∏ÄÂêçËá™Áî±Êí∞Á®ø‰∫∫ÔºåËøô‰∏™Â∑•ÂÖ∑Â∏ÆÊàëËäÇÁúÅ‰∫ÜÂ§ßÈáèÊó∂Èó¥„ÄÇAIÁîüÊàêÁöÑÂÜÖÂÆπÈúÄË¶Å‰∏Ä‰∫õË∞ÉÊï¥Ôºå‰ΩÜ‰Ωú‰∏∫ÂàùÁ®øÂ∑≤ÁªèÁõ∏ÂΩì‰∏çÈîô„ÄÇÂ∏åÊúõËÉΩÂ¢ûÂä†Êõ¥Â§öÁöÑÂàõÊÑèÂÜô‰ΩúÊ®°Êùø„ÄÇ',
    helpful: 18,
    notHelpful: 3,
    verified: true
  },
  {
    id: 'review3',
    user: {
      name: 'ÁéãÂ∞èÊòé',
      avatar: '',
      role: 'Â≠¶Áîü',
      company: 'Ê∏ÖÂçéÂ§ßÂ≠¶'
    },
    rating: 5,
    date: '2025-05-05',
    title: 'Â≠¶ÁîüÂÖöÁöÑÁ¶èÈü≥',
    content: 'ÂÖçË¥πÁâàÊú¨Â∑≤ÁªèËÉΩÊª°Ë∂≥ÊàëÂ§ßÈÉ®ÂàÜÈúÄÊ±Ç‰∫Ü„ÄÇÂÜôËÆ∫Êñá„ÄÅÂÅöÊä•ÂëäÈÉΩÂæàÊúâÂ∏ÆÂä©„ÄÇAIÁöÑÂª∫ËÆÆÂæà‰∏≠ËÇØÔºåÂ∏ÆÊàëÊîπËøõ‰∫ÜÂæàÂ§öË°®ËææÊñπÂºè„ÄÇÂº∫ÁÉàÊé®ËçêÁªôÂêåÂ≠¶‰ª¨ÔºÅ',
    helpful: 12,
    notHelpful: 1,
    verified: false
  },
];

// Mock pricing plans
const pricingPlans = [
  {
    name: 'ÂÖçË¥πÁâà',
    price: '¬•0',
    period: 'Ê∞∏‰πÖÂÖçË¥π',
    features: [
      'ÊØèÊúà5000Â≠óÁîüÊàêÈ¢ùÂ∫¶',
      'Âü∫Á°ÄAIÊ®°Âûã',
      '3‰∏™È¢ÑËÆæÊ®°Êùø',
      'Âü∫Á°ÄÂØºÂá∫ÂäüËÉΩ',
      'Á§æÂå∫ÊîØÊåÅ'
    ],
    recommended: false,
    popular: false
  },
  {
    name: '‰∏ì‰∏öÁâà',
    price: '¬•99',
    period: 'ÊØèÊúà',
    originalPrice: '¬•149',
    features: [
      'ÊØèÊúà50000Â≠óÁîüÊàêÈ¢ùÂ∫¶',
      'È´òÁ∫ßAIÊ®°Âûã',
      '50+‰∏ì‰∏öÊ®°Êùø',
      'Âõ¢ÈòüÂçè‰ΩúÔºà5‰∫∫Ôºâ',
      '‰ºòÂÖàÂÆ¢ÊúçÊîØÊåÅ',
      'È´òÁ∫ßÂØºÂá∫ÈÄâÈ°π',
      'APIËÆøÈóÆÊùÉÈôê'
    ],
    recommended: true,
    popular: true
  },
  {
    name: '‰ºÅ‰∏öÁâà',
    price: '¬•299',
    period: 'ÊØèÊúà',
    features: [
      'Êó†ÈôêÂ≠óÊï∞ÁîüÊàê',
      'ÊúÄÈ´òÁ∫ßAIÊ®°Âûã',
      '100+‰ºÅ‰∏öÊ®°Êùø',
      'Êó†ÈôêÂõ¢ÈòüÊàêÂëò',
      '‰∏ìÂ±ûÂÆ¢Êà∑ÁªèÁêÜ',
      'Ëá™ÂÆö‰πâÈõÜÊàê',
      'Êï∞ÊçÆÂÆâÂÖ®‰øùÈöú',
      'ÁßÅÊúâÈÉ®ÁΩ≤ÈÄâÈ°π'
    ],
    recommended: false,
    popular: false
  },
];

const ToolDetail = () => {
  const { id } = useParams<{ id: string }>();
  const tool = tools.find((t) => t.id === id) || tools[0];
  const toolDetails = getToolDetails(tool.id);
  
  // Related blog posts - filter by matching tags
  const relatedPosts = blogPosts.filter((post) => 
    post.tags.some(tag => tool.tags.includes(tag))
  ).slice(0, 3);

  // Helper function to convert colorVariant to the correct variant format for Tag component
  const getTagVariant = (colorVariant: ColorVariant) => {
    return `ai-${colorVariant}` as "ai-blue" | "ai-purple" | "ai-pink" | "ai-orange" | "ai-green";
  };

  const handleShare = (platform: string) => {
    const url = window.location.href;
    const title = `${tool.name} - AIÂ∑•ÂÖ∑Êé®Ëçê`;
    
    switch (platform) {
      case 'twitter':
        window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url)}`);
        break;
      case 'facebook':
        window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`);
        break;
      case 'linkedin':
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`);
        break;
      case 'copy':
        navigator.clipboard.writeText(url);
        break;
    }
  };

  return (
    <Layout>
      <div className="container mx-auto px-4 py-8">
        {/* Tool Header */}
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden mb-8">
          <div className={`h-40 bg-gradient-to-r from-ai-${tool.colorVariant} to-ai-blue relative`}>
            <div className="absolute inset-0 bg-black/20"></div>
          </div>
          <div className="p-6 md:p-8 relative">
            <div className="flex flex-col md:flex-row md:items-start justify-between gap-6">
              <div className="flex-1">
                <div className="flex items-center gap-3 mb-3">
                  <Tag size="sm" variant={getTagVariant(tool.colorVariant as ColorVariant)}>
                    {tool.category}
                  </Tag>
                  {tool.featured && (
                    <Badge className="bg-ai-orange text-white">
                      <Award size={12} className="mr-1" />
                      Á≤æÈÄâÊé®Ëçê
                    </Badge>
                  )}
                  <Badge variant="outline" className="text-ai-green border-ai-green">
                    <TrendingUp size={12} className="mr-1" />
                    ÁÉ≠Èó®Â∑•ÂÖ∑
                  </Badge>
                </div>
                
                <h1 className="text-4xl font-bold mb-3">{tool.name}</h1>
                
                <p className="text-lg text-muted-foreground mb-4 max-w-3xl">
                  {tool.description}
                </p>
                
                <div className="flex flex-wrap items-center gap-6 mb-4">
                  <div className="flex items-center">
                    <div className="flex items-center mr-2">
                      {[1, 2, 3, 4, 5].map((star) => (
                        <Star 
                          key={star} 
                          size={18} 
                          className={`${star <= Math.round(tool.rating) ? 'text-amber-400 fill-amber-400' : 'text-gray-300'}`} 
                        />
                      ))}
                    </div>
                    <span className="font-semibold text-lg">{tool.rating.toFixed(1)}</span>
                    <span className="text-muted-foreground ml-2">({reviews.length}Êù°ËØÑ‰ª∑)</span>
                  </div>
                  
                  <div className="flex items-center text-muted-foreground">
                    <Users size={16} className="mr-2" />
                    <span>10,000+ Áî®Êà∑</span>
                  </div>
                  
                  <div className="flex items-center text-muted-foreground">
                    <Download size={16} className="mr-2" />
                    <span>ÂÖçË¥πËØïÁî®</span>
                  </div>
                  
                  <div className="flex items-center text-muted-foreground">
                    <Calendar size={16} className="mr-2" />
                    <span>Êõ¥Êñ∞‰∫é 2025Âπ¥5Êúà</span>
                  </div>
                </div>

                {/* Platform Support */}
                <div className="flex items-center gap-4 mb-6">
                  <span className="text-sm font-medium">ÊîØÊåÅÂπ≥Âè∞Ôºö</span>
                  <div className="flex items-center gap-3">
                    <div className="flex items-center gap-1 text-sm text-muted-foreground">
                      <Monitor size={16} />
                      <span>ÁΩëÈ°µÁâà</span>
                    </div>
                    <div className="flex items-center gap-1 text-sm text-muted-foreground">
                      <Smartphone size={16} />
                      <span>ÁßªÂä®Á´Ø</span>
                    </div>
                    <div className="flex items-center gap-1 text-sm text-muted-foreground">
                      <Tablet size={16} />
                      <span>Âπ≥Êùø</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="flex flex-col gap-3 min-w-[200px]">
                <Button size="lg" className="text-lg px-8">
                  <ExternalLink size={18} className="mr-2" />
                  Á´ãÂç≥‰ΩìÈ™å
                </Button>
                <Button variant="outline" size="lg">
                  <Globe size={18} className="mr-2" />
                  ËÆøÈóÆÂÆòÁΩë
                </Button>
                
                {/* Share Buttons */}
                <div className="flex gap-2 mt-2">
                  <Button variant="ghost" size="sm" onClick={() => handleShare('twitter')}>
                    <Twitter size={16} />
                  </Button>
                  <Button variant="ghost" size="sm" onClick={() => handleShare('facebook')}>
                    <Facebook size={16} />
                  </Button>
                  <Button variant="ghost" size="sm" onClick={() => handleShare('linkedin')}>
                    <Linkedin size={16} />
                  </Button>
                  <Button variant="ghost" size="sm" onClick={() => handleShare('copy')}>
                    <Copy size={16} />
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Left Column - Tool Info */}
          <div className="lg:col-span-2">
            <Tabs defaultValue="overview" className="w-full">
              <TabsList className="grid w-full grid-cols-6 mb-6">
                <TabsTrigger value="overview">Ê¶ÇËßà</TabsTrigger>
                <TabsTrigger value="features">ÂäüËÉΩÁâπËâ≤</TabsTrigger>
                <TabsTrigger value="screenshots">ÁïåÈù¢È¢ÑËßà</TabsTrigger>
                <TabsTrigger value="pricing">‰ª∑Ê†ºÊñπÊ°à</TabsTrigger>
                <TabsTrigger value="reviews">Áî®Êà∑ËØÑ‰ª∑</TabsTrigger>
                <TabsTrigger value="alternatives">Áõ∏‰ººÂ∑•ÂÖ∑</TabsTrigger>
              </TabsList>
              
              <TabsContent value="overview" className="space-y-6">
                {/* About Section */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <BookOpen size={24} />
                      ÂÖ≥‰∫é {tool.name}
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="mb-4 text-base leading-relaxed">
                      {tool.name} ÊòØ‰∏ÄÊ¨æÂü∫‰∫éÂÖàËøõ‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÁöÑÂÜÖÂÆπÂàõ‰ΩúÂ∑•ÂÖ∑Ôºå‰∏ì‰∏∫ÊèêÈ´òÂàõ‰ΩúÊïàÁéáÂíåÂÜÖÂÆπË¥®ÈáèËÄåËÆæËÆ°„ÄÇ
                      Êó†ËÆ∫ÊÇ®ÊòØÂÜÖÂÆπÂàõ‰ΩúËÄÖ„ÄÅËê•ÈîÄ‰∏ìÂëò„ÄÅÂ≠¶ÁîüËøòÊòØ‰ºÅ‰∏öÁî®Êà∑ÔºåÈÉΩËÉΩ‰ªéËøôÊ¨æÂ∑•ÂÖ∑‰∏≠ÂèóÁõäÂå™ÊµÖ„ÄÇ
                    </p>
                    <p className="mb-4 text-base leading-relaxed">
                      ÈÄöËøáÈõÜÊàêÊúÄÊñ∞ÁöÑGPTÊäÄÊúØÂíåËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÁÆóÊ≥ïÔºå{tool.name} ËÉΩÂ§üÁêÜËß£Â§çÊùÇÁöÑÂàõ‰ΩúÈúÄÊ±ÇÔºå
                      Âπ∂ÁîüÊàêÈ´òË¥®Èáè„ÄÅ‰∏™ÊÄßÂåñÁöÑÂÜÖÂÆπ„ÄÇÂ∑•ÂÖ∑ÊîØÊåÅÂ§öÁßçÂÜÖÂÆπÁ±ªÂûãÔºå‰ªéÂïÜ‰∏öÊñáÊ°àÂà∞Â≠¶ÊúØËÆ∫ÊñáÔºå‰ªéÂàõÊÑèÊïÖ‰∫ãÂà∞ÊäÄÊúØÊñáÊ°£„ÄÇ
                    </p>
                    <p className="text-base leading-relaxed">
                      Êàë‰ª¨Ëá¥Âäõ‰∫éËÆ©AIÊäÄÊúØÁúüÊ≠£ÊúçÂä°‰∫éÂàõ‰ΩúËÄÖÔºåËÆ©ÊØè‰∏™‰∫∫ÈÉΩËÉΩËΩªÊùæÂàõ‰ΩúÂá∫‰ºòË¥®ÂÜÖÂÆπ„ÄÇ
                    </p>
                  </CardContent>
                </Card>

                {/* Key Features */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Zap size={24} />
                      Ê†∏ÂøÉÂäüËÉΩ
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      {toolDetails.keyFeatures.map((feature, index) => (
                        <div key={index} className="flex gap-4 p-4 rounded-lg border bg-secondary/20">
                          <div className="text-2xl">{feature.icon}</div>
                          <div>
                            <h4 className="font-semibold mb-2">{feature.title}</h4>
                            <p className="text-sm text-muted-foreground">{feature.description}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                {/* Use Cases */}
                <Card>
                  <CardHeader>
                    <CardTitle>Â∫îÁî®Âú∫ÊôØ</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {toolDetails.useCases.map((useCase, index) => (
                        <div key={index} className="border-l-4 border-primary pl-4">
                          <h4 className="font-semibold mb-1">{useCase.title}</h4>
                          <p className="text-muted-foreground mb-2">{useCase.description}</p>
                          <div className="flex gap-2">
                            {useCase.industries.map((industry) => (
                              <Badge key={industry} variant="secondary">{industry}</Badge>
                            ))}
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                {/* Technical Specs */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Shield size={24} />
                      ÊäÄÊúØËßÑÊ†º
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-medium mb-3">ÊîØÊåÅÂπ≥Âè∞</h4>
                        <div className="space-y-2">
                          {toolDetails.technicalSpecs.platforms.map((platform) => (
                            <div key={platform} className="flex items-center gap-2">
                              <Check size={16} className="text-ai-green" />
                              <span>{platform}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                      <div>
                        <h4 className="font-medium mb-3">ÊîØÊåÅËØ≠Ë®Ä</h4>
                        <div className="space-y-2">
                          {toolDetails.technicalSpecs.languages.map((language) => (
                            <div key={language} className="flex items-center gap-2">
                              <Check size={16} className="text-ai-green" />
                              <span>{language}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                      <div>
                        <h4 className="font-medium mb-3">ÈõÜÊàêÊîØÊåÅ</h4>
                        <div className="space-y-2">
                          {toolDetails.technicalSpecs.integrations.slice(0, 3).map((integration) => (
                            <div key={integration} className="flex items-center gap-2">
                              <Check size={16} className="text-ai-green" />
                              <span>{integration}</span>
                            </div>
                          ))}
                          <div className="text-sm text-muted-foreground">
                            +{toolDetails.technicalSpecs.integrations.length - 3} Êõ¥Â§ö
                          </div>
                        </div>
                      </div>
                      <div>
                        <h4 className="font-medium mb-3">ÂÆâÂÖ®ÁâπÊÄß</h4>
                        <div className="space-y-2">
                          <div className="flex items-center gap-2">
                            <Check size={16} className="text-ai-green" />
                            <span>Êï∞ÊçÆÂä†ÂØÜ‰º†Ëæì</span>
                          </div>
                          <div className="flex items-center gap-2">
                            <Check size={16} className="text-ai-green" />
                            <span>API ËÆøÈóÆÊéßÂà∂</span>
                          </div>
                          <div className="flex items-center gap-2">
                            <Check size={16} className="text-ai-green" />
                            <span>GDPR ÂêàËßÑ</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
              
              <TabsContent value="features">
                <Card>
                  <CardHeader>
                    <CardTitle>ËØ¶ÁªÜÂäüËÉΩ‰ªãÁªç</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-8">
                      <div>
                        <h3 className="text-xl font-semibold mb-3 text-ai-blue">Êô∫ËÉΩÂÜÖÂÆπÁîüÊàê</h3>
                        <p className="text-muted-foreground mb-4">
                          Âü∫‰∫éÊúÄÊñ∞ÁöÑÂ§ßËØ≠Ë®ÄÊ®°ÂûãÊäÄÊúØÔºåËÉΩÂ§üÁêÜËß£‰∏ä‰∏ãÊñáËØ≠Â¢ÉÔºåÁîüÊàêËøûË¥Ø„ÄÅÂáÜÁ°Æ„ÄÅÂÖ∑ÊúâÂàõÊÑèÁöÑÂÜÖÂÆπ„ÄÇ
                          ÊîØÊåÅÂ§öÁßçÊñá‰ΩìÈ£éÊ†ºÔºå‰ªéÊ≠£ÂºèÁöÑÂïÜ‰∏öÊñáÊ°£Âà∞ËΩªÊùæÁöÑÁ§æ‰∫§Â™í‰ΩìÂÜÖÂÆπ„ÄÇ
                        </p>
                        <ul className="space-y-2">
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>ÊîØÊåÅ50+ÁßçÂÜÖÂÆπÁ±ªÂûãÊ®°Êùø</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>Êô∫ËÉΩËØ≠Ê≥ïÊ£ÄÊü•Âíå‰ºòÂåñÂª∫ËÆÆ</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>Â§öËØ≠Ë®ÄÂÜÖÂÆπÁîüÊàêÂíåÁøªËØë</span>
                          </li>
                        </ul>
                      </div>
                      
                      <div>
                        <h3 className="text-xl font-semibold mb-3 text-ai-purple">Âõ¢ÈòüÂçè‰Ωú</h3>
                        <p className="text-muted-foreground mb-4">
                          Âº∫Â§ßÁöÑÂÆûÊó∂Âçè‰ΩúÂäüËÉΩÔºåËÆ©Âõ¢ÈòüÊàêÂëòÂèØ‰ª•ÂêåÊó∂ÁºñËæëÊñáÊ°£ÔºåÂÆûÊó∂Êü•ÁúãÂΩºÊ≠§ÁöÑ‰øÆÊîπÔºå
                          Âπ∂ÈÄöËøáÂÜÖÁΩÆÁöÑËØÑËÆ∫ÂíåÂª∫ËÆÆÁ≥ªÁªüËøõË°åÊúâÊïàÊ≤üÈÄö„ÄÇ
                        </p>
                        <ul className="space-y-2">
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>ÂÆûÊó∂Â§ö‰∫∫ÁºñËæë</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>ÁâàÊú¨ÂéÜÂè≤ÁÆ°ÁêÜ</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>ÊùÉÈôêÁÆ°ÁêÜÂíåÂàÜ‰∫´ÊéßÂà∂</span>
                          </li>
                        </ul>
                      </div>
                      
                      <div>
                        <h3 className="text-xl font-semibold mb-3 text-ai-orange">È´òÁ∫ßÂÆöÂà∂</h3>
                        <p className="text-muted-foreground mb-4">
                          Êèê‰æõ‰∏∞ÂØåÁöÑËá™ÂÆö‰πâÈÄâÈ°πÔºåÁî®Êà∑ÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÁöÑÈúÄÊ±ÇË∞ÉÊï¥AIÁöÑË°å‰∏∫Ê®°ÂºèÔºå
                          ÂàõÂª∫‰∏ìÂ±ûÁöÑÂÜô‰ΩúÈ£éÊ†ºÂíåÊ®°Êùø„ÄÇ
                        </p>
                        <ul className="space-y-2">
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>Ëá™ÂÆö‰πâÂÜô‰ΩúÈ£éÊ†º</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>‰∏™‰∫∫Ê®°ÊùøÂ∫ì</span>
                          </li>
                          <li className="flex items-start gap-2">
                            <Check size={16} className="mt-1 text-ai-green" />
                            <span>APIÈõÜÊàêÂíåËá™Âä®Âåñ</span>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="screenshots">
                <Card>
                  <CardHeader>
                    <CardTitle>ÁïåÈù¢È¢ÑËßà</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {toolDetails.screenshots.map((screenshot, index) => (
                        <div key={index} className="rounded-lg overflow-hidden border">
                          <img 
                            src={screenshot} 
                            alt={`ÁïåÈù¢Êà™Âõæ ${index + 1}`}
                            className="w-full h-64 object-cover hover:scale-105 transition-transform cursor-pointer"
                          />
                        </div>
                      ))}
                    </div>
                    <p className="text-sm text-muted-foreground mt-4 text-center">
                      ÁÇπÂáªÂõæÁâáÊü•ÁúãÂ§ßÂõæ
                    </p>
                  </CardContent>
                </Card>
              </TabsContent>
              
              <TabsContent value="pricing">
                <div className="space-y-6">
                  <div className="text-center">
                    <h2 className="text-2xl font-bold mb-2">ÈÄâÊã©ÈÄÇÂêàÊÇ®ÁöÑÊñπÊ°à</h2>
                    <p className="text-muted-foreground">
                      ‰ªéÂÖçË¥πËØïÁî®Âà∞‰ºÅ‰∏öËß£ÂÜ≥ÊñπÊ°àÔºåÊàë‰ª¨‰∏∫ÊØèÁßçÈúÄÊ±ÇÊèê‰æõÂêàÈÄÇÁöÑ‰ª∑Ê†ºÊñπÊ°à
                    </p>
                  </div>
                  
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    {pricingPlans.map((plan, index) => (
                      <Card key={index} className={`relative ${plan.recommended ? 'border-primary border-2 shadow-lg' : ''}`}>
                        {plan.popular && (
                          <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                            <Badge className="bg-primary text-white px-4 py-1">
                              ÊúÄÂèóÊ¨¢Ëøé
                            </Badge>
                          </div>
                        )}
                        <CardHeader className="text-center">
                          <CardTitle className="text-xl">{plan.name}</CardTitle>
                          <div className="mt-4">
                            <div className="flex items-baseline justify-center gap-2">
                              <span className="text-4xl font-bold">{plan.price}</span>
                              <span className="text-muted-foreground">/{plan.period}</span>
                            </div>
                            {plan.originalPrice && (
                              <div className="text-sm text-muted-foreground line-through">
                                Âéü‰ª∑ {plan.originalPrice}
                              </div>
                            )}
                          </div>
                        </CardHeader>
                        <CardContent>
                          <ul className="space-y-3 mb-6">
                            {plan.features.map((feature, idx) => (
                              <li key={idx} className="flex items-start gap-2">
                                <Check size={16} className="mt-1 text-ai-green flex-shrink-0" />
                                <span className="text-sm">{feature}</span>
                              </li>
                            ))}
                          </ul>
                          <Button 
                            className={`w-full ${plan.recommended ? '' : 'bg-secondary text-secondary-foreground hover:bg-secondary/90'}`} 
                            variant={plan.recommended ? 'default' : 'secondary'}
                          >
                            {plan.name === 'ÂÖçË¥πÁâà' ? 'Á´ãÂç≥ÂºÄÂßã' : 'ÈÄâÊã©Ê≠§ÊñπÊ°à'}
                          </Button>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                  
                  <div className="text-center text-sm text-muted-foreground">
                    <p>ÊâÄÊúâ‰ªòË¥πÊñπÊ°àÊîØÊåÅ7Â§©ÂÖçË¥πËØïÁî® ‚Ä¢ ÈöèÊó∂ÂèØ‰ª•ÂèñÊ∂àËÆ¢ÈòÖ</p>
                  </div>
                </div>
              </TabsContent>
              
              <TabsContent value="reviews">
                <div className="space-y-6">
                  {/* Review Summary */}
                  <Card>
                    <CardContent className="p-6">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div className="text-center">
                          <div className="text-5xl font-bold mb-2">{tool.rating.toFixed(1)}</div>
                          <div className="flex justify-center mb-2">
                            {[1, 2, 3, 4, 5].map((star) => (
                              <Star 
                                key={star} 
                                size={20} 
                                className={`${star <= Math.round(tool.rating) ? 'text-amber-400 fill-amber-400' : 'text-gray-300'}`} 
                              />
                            ))}
                          </div>
                          <div className="text-sm text-muted-foreground">Âü∫‰∫é {reviews.length} Êù°Áî®Êà∑ËØÑ‰ª∑</div>
                        </div>
                        
                        <div>
                          <h4 className="font-medium mb-4">ËØÑÂàÜÂàÜÂ∏É</h4>
                          {[5, 4, 3, 2, 1].map((rating) => {
                            const count = reviews.filter(r => Math.floor(r.rating) === rating).length;
                            const percentage = (count / reviews.length) * 100;
                            return (
                              <div key={rating} className="flex items-center gap-3 mb-2">
                                <span className="w-8 text-sm">{rating}Êòü</span>
                                <div className="flex-1 bg-secondary rounded-full h-2">
                                  <div 
                                    className="bg-amber-400 h-2 rounded-full" 
                                    style={{ width: `${percentage}%` }}
                                  ></div>
                                </div>
                                <span className="w-12 text-sm text-right">{count}Êù°</span>
                              </div>
                            );
                          })}
                        </div>
                      </div>
                    </CardContent>
                  </Card>

                  {/* Review Actions */}
                  <div className="flex justify-between items-center">
                    <h3 className="text-xl font-semibold">Áî®Êà∑ËØÑ‰ª∑</h3>
                    <Button>ÂÜôËØÑ‰ª∑</Button>
                  </div>
                  
                  {/* Individual Reviews */}
                  <div className="space-y-6">
                    {reviews.map((review) => (
                      <Card key={review.id}>
                        <CardContent className="p-6">
                          <div className="flex items-start justify-between mb-4">
                            <div className="flex items-start gap-3">
                              <Avatar className="h-12 w-12">
                                <AvatarImage src={review.user.avatar} alt={review.user.name} />
                                <AvatarFallback>{review.user.name[0]}</AvatarFallback>
                              </Avatar>
                              <div>
                                <div className="flex items-center gap-2 mb-1">
                                  <h4 className="font-medium">{review.user.name}</h4>
                                  {review.verified && (
                                    <Badge variant="secondary" className="text-xs">
                                      <Check size={10} className="mr-1" />
                                      Â∑≤È™åËØÅ
                                    </Badge>
                                  )}
                                </div>
                                <div className="text-sm text-muted-foreground mb-2">
                                  {review.user.role} ‚Ä¢ {review.user.company}
                                </div>
                                <div className="flex items-center gap-2">
                                  <div className="flex">
                                    {[1, 2, 3, 4, 5].map((star) => (
                                      <Star 
                                        key={star} 
                                        size={14} 
                                        className={`${star <= review.rating ? 'text-amber-400 fill-amber-400' : 'text-gray-300'}`} 
                                      />
                                    ))}
                                  </div>
                                  <span className="text-xs text-muted-foreground">{review.date}</span>
                                </div>
                              </div>
                            </div>
                          </div>
                          
                          <h5 className="font-medium mb-2">{review.title}</h5>
                          <p className="mb-4 leading-relaxed">{review.content}</p>
                          
                          <div className="flex items-center justify-between pt-4 border-t">
                            <div className="flex items-center gap-4">
                              <button className="text-sm flex items-center gap-1 text-muted-foreground hover:text-foreground">
                                <ThumbsUp size={14} />
                                ÊúâÂ∏ÆÂä© ({review.helpful})
                              </button>
                              <button className="text-sm flex items-center gap-1 text-muted-foreground hover:text-foreground">
                                <ThumbsDown size={14} />
                                Êó†Â∏ÆÂä© ({review.notHelpful})
                              </button>
                            </div>
                            <button className="text-sm flex items-center gap-1 text-muted-foreground hover:text-foreground">
                              <Flag size={14} />
                              ‰∏æÊä•
                            </button>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </div>
              </TabsContent>
              
              <TabsContent value="alternatives">
                <div className="space-y-6">
                  <div>
                    <h2 className="text-2xl font-semibold mb-2">Áõ∏‰ººÂ∑•ÂÖ∑Êé®Ëçê</h2>
                    <p className="text-muted-foreground">
                      Êé¢Á¥¢Êõ¥Â§öÂêåÁ±ªÂûãÁöÑAIÂ∑•ÂÖ∑ÔºåÊâæÂà∞ÊúÄÈÄÇÂêà‰Ω†ÈúÄÊ±ÇÁöÑËß£ÂÜ≥ÊñπÊ°à
                    </p>
                  </div>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {tools.filter(t => t.id !== tool.id && t.category === tool.category).slice(0, 6).map((alt) => (
                      <ToolCard key={alt.id} {...alt} />
                    ))}
                  </div>
                </div>
              </TabsContent>
            </Tabs>
          </div>
          
          {/* Right Column - Sidebar */}
          <div className="space-y-6">
            {/* Quick Actions */}
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-4">Âø´ÈÄüÊìç‰Ωú</h3>
                <div className="space-y-3">
                  <Button className="w-full" size="lg">
                    <ExternalLink size={16} className="mr-2" />
                    Á´ãÂç≥ËØïÁî®
                  </Button>
                  <Button variant="outline" className="w-full">
                    <BookOpen size={16} className="mr-2" />
                    Êü•ÁúãÊñáÊ°£
                  </Button>
                  <Button variant="outline" className="w-full">
                    <HeadphonesIcon size={16} className="mr-2" />
                    ËÅîÁ≥ªÂÆ¢Êúç
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* Tool Tags */}
            <Card>
              <CardContent className="p-6">
                <div className="flex justify-between items-center mb-4">
                  <h3 className="text-lg font-semibold">Â∑•ÂÖ∑Ê†áÁ≠æ</h3>
                  <Button variant="ghost" size="sm" onClick={() => handleShare('copy')}>
                    <Share2 size={16} className="mr-1" />
                    ÂàÜ‰∫´
                  </Button>
                </div>
                <div className="flex flex-wrap gap-2">
                  {tool.tags.map((tag) => (
                    <Tag key={tag} size="sm">{tag}</Tag>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Latest Updates */}
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-4">Êõ¥Êñ∞Êó•Âøó</h3>
                <div className="space-y-4">
                  {toolDetails.changelog.slice(0, 3).map((update, index) => (
                    <div key={index} className="border-l-2 border-primary pl-3">
                      <div className="flex items-center gap-2 mb-1">
                        <Badge variant="outline">{update.version}</Badge>
                        <span className="text-sm text-muted-foreground">{update.date}</span>
                      </div>
                      <ul className="text-sm space-y-1">
                        {update.changes.map((change, idx) => (
                          <li key={idx} className="text-muted-foreground">‚Ä¢ {change}</li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
            
            {/* Related Articles */}
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-4">Áõ∏ÂÖ≥ÊñáÁ´†</h3>
                <div className="space-y-4">
                  {relatedPosts.map((post) => (
                    <div key={post.id} className="group">
                      <h4 className="font-medium text-sm mb-1 line-clamp-2 group-hover:text-primary cursor-pointer">
                        <a href={`/articles/${post.id}`}>
                          {post.title}
                        </a>
                      </h4>
                      <div className="flex items-center gap-2 text-xs text-muted-foreground">
                        <Clock size={12} />
                        <span>{post.readTime}</span>
                        <span>‚Ä¢</span>
                        <span>{post.date}</span>
                      </div>
                    </div>
                  ))}
                </div>
                <Button variant="outline" size="sm" className="w-full mt-4">
                  Êü•ÁúãÊõ¥Â§öÊñáÁ´†
                </Button>
              </CardContent>
            </Card>
            
            {/* Community Stats */}
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-4">Á§æÂå∫ËÆ®ËÆ∫</h3>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm flex items-center gap-2">
                      <MessageSquare size={14} />
                      ËÆ®ËÆ∫ËØùÈ¢ò
                    </span>
                    <span className="text-sm font-medium">42</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm flex items-center gap-2">
                      <Users size={14} />
                      Ê¥ªË∑ÉÁî®Êà∑
                    </span>
                    <span className="text-sm font-medium">89</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm flex items-center gap-2">
                      <Star size={14} />
                      Â•ΩËØÑÁéá
                    </span>
                    <span className="text-sm font-medium">96%</span>
                  </div>
                </div>
                <Button variant="outline" className="w-full mt-4" asChild>
                  <a href="/forum">
                    <MessageSquare size={16} className="mr-2" />
                    Âä†ÂÖ•ËÆ®ËÆ∫
                  </a>
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
        
        {/* Similar Tools Section */}
        <section className="mt-12">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-semibold">Áõ∏‰ººÂ∑•ÂÖ∑Êé®Ëçê</h2>
            <Button variant="outline" asChild>
              <a href={`/categories/${tool.categorySlug}`}>
                Êü•ÁúãÊõ¥Â§ö {tool.category} Â∑•ÂÖ∑
              </a>
            </Button>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
            {tools
              .filter(t => 
                t.id !== tool.id && 
                (t.categorySlug === tool.categorySlug || 
                 t.tags.some(tag => tool.tags.includes(tag)))
              )
              .slice(0, 4)
              .map(similarTool => (
                <ToolCard key={similarTool.id} {...similarTool} />
              ))
            }
          </div>
        </section>
      </div>
    </Layout>
  );
};

export default ToolDetail;
